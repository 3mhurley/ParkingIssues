<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_pir.EmployeeCar</api_name>
        <client_callable>false</client_callable>
        <description/>
        <name>EmployeeCar</name>
        <script><![CDATA[var EmployeeCar = Class.create();

EmployeeCar.TABLE_NAME = "x_pir_employee_car";
EmployeeCar.LICENSE_PLATE_NUMBER = "license_plate_number";

EmployeeCar.prototype = {
    initialize: function() {
    },
	
	find: function (licensePlate, color, make, model){
		// First try to match the license plate exactly, if we have that, we're done
		if (!gs.nil(licensePlate)) {
			gs.debug("Looking up by license plate: " + licensePlate);
			var car = this.findByLicensePlate(licensePlate);
			if (car) {
				return car;
			}
		}
		
		// Try searching by the description
		var car = new GlideRecordSecure(EmployeeCar.TABLE_NAME);
		if (!gs.nil(color))
			car.addQuery("color", color);
		if (!gs.nil(make))
			car.addQuery("car.make", make);
		if (!gs.nil(model))
			car.addQuery("car.model", model);
		if (gs.nil(car.getEncodedQuery())) {
			gs.error("No suitable query conditions provided, aborting issue reporting.");
			return null;
		}
		
		car.query();
		if (car.getRowCount() == 1) {
			car.next();
			gs.debug("Found employee car: " + car.getUniqueValue());
			return car;
		}
		
		if (gs.getProperty("x_pir.issue.create_car_if_not_found") === "true") {
			gs.info("Car not found, but property to create on demand is true, creating a car");
			return this.create(licensePlate, color, make, model);
		}
		return null;
	},
	
	findByLicensePlate: function (licensePlate) {
		var car = new GlideRecordSecure(EmployeeCar.TABLE_NAME);
		car.addQuery(EmployeeCar.LICENSE_PLATE_NUMBER, licensePlate);
		car.query();
		if (car.next()) {
			return car;
		}
		
		// Maybe it's a partial plate, try a CONTAINS search
		car = new GlideRecordSecure(EmployeeCar.TABLE_NAME);
		car.addQuery(EmployeeCar.LICENSE_PLATE_NUMBER, "CONTAINS", licensePlate);
		car.query();
		if (car.getRowCount() == 1) {
			// Found one match, return it (if there are multiple matches, keep looking)
			car.next();
			gs.debug("Found car by CONTAINS license plate search: " + car.getUniqueValue());
			return car;
		}
	
		gs.warn("Car not found");
		return null;
	},
	
	create: function (licensePlate, color, make, model) {
		// First identify the x_pir_car record (create that too if not present)
		var car = this.getOrCreateCar(make, model);
		
		// Create employee car entry (without an employee reference)
		var empCar = new GlideRecord(EmployeeCar.TABLE_NAME);
		empCar.initialize();
		empCar.car = car.getUniqueValue();
		empCar.color = color;
		empCar.license_plate_number = licensePlate;
		var empCarId = empCar.insert();
		gs.debug("Created car with id: " + empCarId);
		empCar.get(empCarId);
		return empCar;
	},
	
	getOrCreateCar: function (make, model) {
		var car = new GlideRecord("x_pir_car");
		car.addQuery("make", make);
		car.addQuery("model", model);
		car.query();
		if (car.next()) {
			gs.debug("Found car by make and model: " + car.getUniqueValue());
			return car;
		} 
		
		car.initialize();
		car.make = make;
		car.model = model;
		var id = car.insert();
		car.get(id);
		gs.debug("Created car for {0} {1}: {2}", make, model, car.getUniqueValue());
		return car;
	},
	
    type: 'EmployeeCar'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2016-04-22 21:15:49</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>47da7c84670312008db1bcb532415ad8</sys_id>
        <sys_mod_count>9</sys_mod_count>
        <sys_name>EmployeeCar</sys_name>
        <sys_package display_value="Parking Issues" source="x_pir">2bc7b833673212008db1bcb532415a9d</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Parking Issues">2bc7b833673212008db1bcb532415a9d</sys_scope>
        <sys_update_name>sys_script_include_47da7c84670312008db1bcb532415ad8</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2016-04-22 23:24:26</sys_updated_on>
    </sys_script_include>
</record_update>
